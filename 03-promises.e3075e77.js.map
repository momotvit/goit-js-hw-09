{"mappings":"iiBACC,IAAAA,EAAAC,EAAA,S,aAEKC,EAASC,SAASC,cAAc,SAChCC,EAAMF,SAASC,cAAc,UAmFnC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA3FPO,QAAQC,IAAIX,GAEZH,EAAOe,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACNd,EAAIe,aAAa,WAAY,QAM7B,IALA,IAAgCC,EAAAH,EAAMI,cAAcC,SAA5CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGL,GAAcK,EAAI,GAAKF,GACrCG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAAC,OAAOC,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MA2BjD+B,EAAAvC,EAAA,EA1BAwC,UAAW,kBACXC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OACdC,KAAK,EACLC,OAAQ,KACRC,aAAa,EACbC,iBAAkB,kBAClBC,yBAAyB,EACzBC,WAAY,YACZC,QAAS,QACTC,WAAW,EACXC,cAAe,OACfC,eAAgB,GAChBC,gBAAiB,OACjBC,iBAAkB,IAClBC,eAAgB,OAChBC,gBAAiB,GACjBC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,IACnBC,SAAU,UACVC,WAAY,UACZC,aAAc,UACdC,iBAAkB,UAClBC,YAAa,QACb,mBAAkB,uB,IAG3BC,OAAM,SAAAhC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAAC,OAAO+B,QAAQ,oBAAmC7B,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MA2BhD+B,EAAAvC,EAAA,EA1BAwC,UAAW,kBACXC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OACdC,KAAK,EACLC,OAAQ,KACRC,aAAa,EACbC,iBAAkB,kBAClBC,yBAAyB,EACzBC,WAAY,YACZC,QAAS,QACTC,WAAW,EACXC,cAAe,OACfC,eAAgB,GAChBC,gBAAiB,OACjBC,iBAAkB,IAClBC,eAAgB,OAChBC,gBAAiB,GACjBC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,IACnBC,SAAU,UACVC,WAAY,UACZC,aAAc,UACdC,iBAAkB,UAClBC,YAAa,QACb,mBAAkB,uB,IAMhC5D,EAAI+D,gBAAgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["\n import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst btn = document.querySelector('button');\nconsole.log(btn);\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  btn.setAttribute('disabled', 'true');\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue + (i - 1) * stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n                className: 'notiflix-report',\n                width: '320px',\n                backgroundColor: '#f8f8f8',\n                borderRadius: '25px',\n                rtl: false,\n                zindex: 4002,\n                backOverlay: true,\n                backOverlayColor: 'rgba(0,0,0,0.5)',\n                backOverlayClickToClose: false,\n                fontFamily: 'Quicksand',\n                svgSize: '110px',\n                plainText: true,\n                titleFontSize: '16px',\n                titleMaxLength: 34,\n                messageFontSize: '13px',\n                messageMaxLength: 400,\n                buttonFontSize: '14px',\n                buttonMaxLength: 34,\n                cssAnimation: true,\n                cssAnimationDuration: 360,\n                cssAnimationStyle: 'fade' - 'zoom',\n                svgColor: '#ff5549',\n                titleColor: '#1e1e1e',\n                messageColor: '#242424',\n                buttonBackground: '#ff5549',\n                buttonColor: '#fff',\n                backOverlayColor: 'rgba(255,85,73,0.2)',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`,{\n                className: 'notiflix-report',\n                width: '320px',\n                backgroundColor: '#f8f8f8',\n                borderRadius: '25px',\n                rtl: false,\n                zindex: 4002,\n                backOverlay: true,\n                backOverlayColor: 'rgba(0,0,0,0.5)',\n                backOverlayClickToClose: false,\n                fontFamily: 'Quicksand',\n                svgSize: '110px',\n                plainText: true,\n                titleFontSize: '16px',\n                titleMaxLength: 34,\n                messageFontSize: '13px',\n                messageMaxLength: 400,\n                buttonFontSize: '14px',\n                buttonMaxLength: 34,\n                cssAnimation: true,\n                cssAnimationDuration: 360,\n                cssAnimationStyle: 'fade' - 'zoom',\n                svgColor: '#ff5549',\n                titleColor: '#1e1e1e',\n                messageColor: '#242424',\n                buttonBackground: '#ff5549',\n                buttonColor: '#fff',\n                backOverlayColor: 'rgba(255,85,73,0.2)',\n        });\n\n      });\n   \n  }\n  btn.removeAttribute('disabled');\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$hKHmD","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","event","preventDefault","setAttribute","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","param","$h6c0i","Notify","success","concat","$parcel$interopDefault","className","width","backgroundColor","borderRadius","rtl","zindex","backOverlay","backOverlayColor","backOverlayClickToClose","fontFamily","svgSize","plainText","titleFontSize","titleMaxLength","messageFontSize","messageMaxLength","buttonFontSize","buttonMaxLength","cssAnimation","cssAnimationDuration","cssAnimationStyle","svgColor","titleColor","messageColor","buttonBackground","buttonColor","catch","failure","removeAttribute"],"version":3,"file":"03-promises.e3075e77.js.map"}